package com.synergy.keimed_ordergenie.database;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig stockistProductsDaoConfig;
    private final DaoConfig chemistCartDaoConfig;
    private final DaoConfig chemistOrderSyncDaoConfig;
    private final DaoConfig legendMasterDaoConfig;
    private final DaoConfig chemistOrderDaoConfig;

    private final StockistProductsDao stockistProductsDao;
    private final ChemistCartDao chemistCartDao;
    private final ChemistOrderSyncDao chemistOrderSyncDao;
    private final LegendMasterDao legendMasterDao;
    private final ChemistOrderDao chemistOrderDao;
    private final DaoConfig masterPlacedOrderDaoConfig;
    private final MasterPlacedOrderDao masterPlacedOrderDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        stockistProductsDaoConfig = daoConfigMap.get(StockistProductsDao.class).clone();
        stockistProductsDaoConfig.initIdentityScope(type);

        chemistCartDaoConfig = daoConfigMap.get(ChemistCartDao.class).clone();
        chemistCartDaoConfig.initIdentityScope(type);

        chemistOrderSyncDaoConfig = daoConfigMap.get(ChemistOrderSyncDao.class).clone();
        chemistOrderSyncDaoConfig.initIdentityScope(type);

        legendMasterDaoConfig = daoConfigMap.get(LegendMasterDao.class).clone();
        legendMasterDaoConfig.initIdentityScope(type);

        chemistOrderDaoConfig = daoConfigMap.get(ChemistOrderDao.class).clone();
        chemistOrderDaoConfig.initIdentityScope(type);

        stockistProductsDao = new StockistProductsDao(stockistProductsDaoConfig, this);
        chemistCartDao = new ChemistCartDao(chemistCartDaoConfig, this);
        chemistOrderSyncDao = new ChemistOrderSyncDao(chemistOrderSyncDaoConfig, this);
        legendMasterDao = new LegendMasterDao(legendMasterDaoConfig, this);
        chemistOrderDao = new ChemistOrderDao(chemistOrderDaoConfig, this);

        masterPlacedOrderDaoConfig = daoConfigMap.get(MasterPlacedOrderDao.class).clone();
        masterPlacedOrderDaoConfig.initIdentityScope(type);

        masterPlacedOrderDao = new MasterPlacedOrderDao(masterPlacedOrderDaoConfig, this);

        registerDao(MasterPlacedOrder.class, masterPlacedOrderDao);

        registerDao(StockistProducts.class, stockistProductsDao);
        registerDao(ChemistCart.class, chemistCartDao);
        registerDao(ChemistOrderSync.class, chemistOrderSyncDao);
        registerDao(LegendMaster.class, legendMasterDao);
        registerDao(ChemistOrder.class, chemistOrderDao);
    }

    public void clear() {
        stockistProductsDaoConfig.clearIdentityScope();
        chemistCartDaoConfig.clearIdentityScope();
        chemistOrderSyncDaoConfig.clearIdentityScope();
        legendMasterDaoConfig.clearIdentityScope();
        chemistOrderDaoConfig.clearIdentityScope();
        masterPlacedOrderDaoConfig.clearIdentityScope();
    }

    public StockistProductsDao getStockistProductsDao() {
        return stockistProductsDao;
    }

    public ChemistCartDao getChemistCartDao() {
        return chemistCartDao;
    }

    public ChemistOrderSyncDao getChemistOrderSyncDao() {
        return chemistOrderSyncDao;
    }

    public LegendMasterDao getLegendMasterDao() {
        return legendMasterDao;
    }

    public ChemistOrderDao getChemistOrderDao() {
        return chemistOrderDao;
    }

    public MasterPlacedOrderDao getMasterPlacedOrderDao() {
        return masterPlacedOrderDao;
    }






}
